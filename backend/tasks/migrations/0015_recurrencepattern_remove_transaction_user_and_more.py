# Generated by Django 4.2.6 on 2023-11-19 20:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('boards', '0001_initial'),
        ('tasks', '0014_recurrencetask_completed_todo_completed'),
    ]

    operations = [
        migrations.CreateModel(
            name='RecurrencePattern',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recurring_type', models.IntegerField(choices=[(0, 'Daily'), (1, 'Weekly'), (2, 'Monthly'), (3, 'Yearly')])),
                ('max_occurrences', models.IntegerField(default=0)),
                ('day_of_week', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')])),
                ('week_of_month', models.IntegerField(choices=[(1, 'First'), (2, 'Second'), (3, 'Third'), (4, 'Fourth'), (5, 'Last')])),
                ('day_of_month', models.IntegerField(default=0)),
                ('month_of_year', models.IntegerField(choices=[(1, 'January'), (2, 'February'), (3, 'March'), (4, 'April'), (5, 'May'), (6, 'June'), (7, 'July'), (8, 'August'), (9, 'September'), (10, 'October'), (11, 'November'), (12, 'December')])),
            ],
        ),
        migrations.RemoveField(
            model_name='transaction',
            name='user',
        ),
        migrations.DeleteModel(
            name='UserNotification',
        ),
        migrations.RemoveField(
            model_name='habit',
            name='end_event',
        ),
        migrations.RemoveField(
            model_name='habit',
            name='google_calendar_id',
        ),
        migrations.RemoveField(
            model_name='habit',
            name='start_event',
        ),
        migrations.RemoveField(
            model_name='recurrencetask',
            name='google_calendar_id',
        ),
        migrations.RemoveField(
            model_name='recurrencetask',
            name='recurrence_rule',
        ),
        migrations.AddField(
            model_name='habit',
            name='current_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='recurrencetask',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='recurrencetask',
            name='is_full_day_event',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='recurrencetask',
            name='list_board',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='boards.listboard'),
        ),
        migrations.AddField(
            model_name='recurrencetask',
            name='parent_task',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tasks.recurrencetask'),
        ),
        migrations.AddField(
            model_name='recurrencetask',
            name='rrule',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='todo',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='todo',
            name='is_full_day_event',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='todo',
            name='list_board',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='boards.listboard'),
        ),
        migrations.DeleteModel(
            name='Transaction',
        ),
        migrations.AddField(
            model_name='recurrencepattern',
            name='recurrence_task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.recurrencetask'),
        ),
    ]
